<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<!-- API Doc: http://dev.desk.com/API/using-the-api/#authentication -->
<template name="init" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="apiUrl" description="The API Url to access the endpoint."/>
    <parameter name="email" description="The email address of the account."/>
    <parameter name="password" description="The password of the account."/>
    <parameter name="fields"
               description="The fields included in a response limit by providing the comma separated field names."/>
    <sequence>
        <property name="uri.var.apiUrl" expression="$func:apiUrl"/>
        <property name="uri.var.email" expression="$func:email"/>
        <property name="uri.var.password" expression="$func:password"/>
        <property name="uri.var.fields" expression="$func:fields"/>
        <filter source="boolean(get-property('uri.var.apiUrl'))" regex="true">
            <then>
                <property name="uri.var.apiUrl"
                          expression="fn:concat(get-property('uri.var.apiUrl'), '/api/v2')"/>
            </then>
            <else>
                <property name="uri.var.apiUrl"
                          expression="fn:concat(get-property('registry', 'connectors/SalesforceDesk/apiUrl'), '/api/v2')"/>
            </else>
        </filter>
        <filter source="boolean(get-property('uri.var.email'))" regex="false">
            <then>
                <property name="uri.var.email"
                          expression="get-property('registry', 'connectors/SalesforceDesk/email')"/>
            </then>
        </filter>
        <filter source="boolean(get-property('uri.var.password'))" regex="false">
            <then>
                <property name="uri.var.password"
                          expression="get-property('registry', 'connectors/SalesforceDesk/password')"/>
            </then>
        </filter>
        <script language="js">
            <![CDATA[
            var fields = mc.getProperty('uri.var.fields');
            var urlQuery = '';
            if (fields != null && fields != "") {
               urlQuery += 'fields=' + fields + '&';
            }
            mc.setProperty('uri.var.urlQuery', urlQuery);
         ]]>
        </script>
        <filter xpath="boolean(get-property('uri.var.password'))">
            <then>
                <header name="Authorization"
                        expression="fn:concat('Basic ', base64Encode(fn:concat(get-property('uri.var.email'), ':',get-property('uri.var.password'))))"
                        scope="transport"/>
            </then>
        </filter>
    </sequence>
</template>